# - name: get existing indentity providers
#   command: "oc get oauths.config.openshift.io cluster   -o=jsonpath='{.spec.identityProviders}'"
#   register: existing_identity_providers
#
# - debug:
#     msg: "existing_identity_providers: {{existing_identity_providers.stdout_lines}}"
#
# - set_fact:
#     identity_roviders: "{{existing_identity_providers.stdout_lines}}"
#   tags: auth
#

- set_fact:
   identity_roviders: []
  tags: auth

- name: "test loop"
  debug:
    msg: "{{htpasswd.lab}}"


- name: Create htpasswd secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    validate_certs: no
    definition:
      apiVersion: v1
      data:
        htpasswd: "{{ htpasswd.lab | b64encode }}"
      kind: Secret
      metadata:
        name: "htpasswd-lab"
        namespace: openshift-config
      type: Opaque
  tags: auth,htpasswd




- name: Configure identity providers
  tags: auth
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    validate_certs: no
    template: oauth_provider.yaml.j2
    namespace: openshift-config
  

- name: Add cluster-admin role to admins
  tags: auth
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    validate_certs: no
    definition:
      kind: ClusterRoleBinding
      apiVersion: rbac.authorization.k8s.io/v1
      metadata:
        name: "{{ item }}-cluster-admin"
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: User
        name: "{{ item }}"
      roleRef:
        kind: ClusterRole
        name: "cluster-admin"
  with_items: "{{ocpadmins}}"
